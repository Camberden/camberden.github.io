	<!---------- EXPENSE MANAGEMENT ---------->
	<div class="container">

		<div class="marker">
			<h2>Expense Management</h2>
		</div>
		<div>
			<ul id="notes-list">
				<!-- <li id="notes-header">Notes:</li> -->
				<span>Notes:</span>
				<li>P2P $300.00 on 1st of months: <span id="p2p">$2124.74</span> remain.</li>
				<li>Progression: $1250 on August 30th.</li>
				<li>Base-Rate Raise: $46594 to $47993 on August 10th.</li>
			</ul>
		</div>

		<ul id="balance-list">
			<li class="no-bullet">STARTING BALANCE = $<input type="text" id="balance" label="balance"></li>
			<!-- CAR PAYMENT -->
			<li class="not-applicable"><input type="checkbox" id="car-check">CAR = $<span class="expense"
					id="car-cost">0</span>
				<span class="non-automated-payment">Automated: 3rd</span>
			</li>
			<!-- FEDERAL STUDENT LOAN -->
			<li class="checkbox"><input type="checkbox" id="nav-check">NAV = $<span class="expense"
					id="nav-cost">0</span>
				<span class="automated-payment">Automated: 3rd</span>
			</li>
			<!-- PRIVATE STUDENT LOAN -->
			<li><input type="checkbox" id="sal-check">SAL = $<span class="expense" id="sal-cost">0</span>
				<span class="automated-payment">Automated: 1st</span>
			</li>
			<!-- MY RENT -->
			<li><input type="checkbox" id="ren-check">REN = $<span class="expense" id="ren-cost">0</span>
				<span class="automated-payment">Automated: 1st</span>
			</li>
			<!-- HER RENT -->
			<li class="not-applicable"><input type="checkbox" id="hrt-check">HRT = $<span class="expense"
					id="hrt-cost">0</span>
				<span class="her-non-automated-payment">NOT Automated</span>
			</li>
			<!-- RENTER'S INSURANCE -->
			<li><input type="checkbox" id="rti-check">RTI = $<span class="expense" id="rti-cost">0</span>
				<span class="automated-payment">Automated: 3rd</span>
			</li>
			<!-- CAR INSURANCE -->
			<li><input type="checkbox" id="ins-check">INS = $<span class="expense" id="ins-cost">0</span>
				<span class="automated-payment">Automated: 30th</span>
			</li>
			<!-- PERSONAL LOAN -->
			<li><input type="checkbox" id="loa-check">LOA = $<span class="expense" id="loa-cost">0</span>
				<span class="non-automated-payment">NOT Automated</span>
			</li>
			<!-- WATER BILL -->
			<li class="not-applicable"><input type="checkbox" id="wat-check">WAT = $<span class="expense"
					id="wat-cost">0</span>
				<span class="her-non-automated-payment">NOT Automated</span>
			</li>
			<!-- ELECTRICITY/POWER BILL -->
			<li class="not-applicable"><input type="checkbox" id="ele-check">ELE = $<span class="expense"
					id="ele-cost">0</span>
				<span class="her-automated-payment">Automated: 1st</span>
			</li>
			<!-- INTERNET BILL -->
			<li class="not-applicable"><input type="checkbox" id="int-check">INT = $<span class="expense"
					id="int-cost">0</span>
				<span class="her-automated-payment">Automated: 2nd</span>
			</li>
			<!-- MUSIC SUBSCRIPTION -->
			<li><input type="checkbox" id="mus-check">MUS = $<span class="expense" id="mus-cost">0</span>
				<span class="automated-payment">Automated: 1st</span>
			</li>
			<!-- GYM MEMBERSHIP -->
			<li class="not-applicable"><input type="checkbox" id="gym-check">GYM = $<span class="expense"
					id="gym-cost">0</span>
				<span class="non-automated-payment">NOT Automated</span>
			</li>
			<!-- MISCELLANEOUS OBLIGATIONS -->
			<li><input type="checkbox" id="inp-check">INP = $<input type="number" placeholder=" Input Value"
					id="inp-cost">
			</li>
			<br>
			<!-- TOTAL AFTER DEDUCTIONS -->
			<li class="no-bullet">ENDING BALANCE = $<span id="endbalance">0</span>
			</li>
		</ul>

	</div>


	<!---------- PSLF PROGRESS DATA ---------->
	<div class="container">

		<div class="marker">
			<h2>PSLF Management</h2>
		</div>

		<p id="pslf-heading"></p>
		<div class="bar" id="pslf-progress-bar">
			<!-- `<span style="width:` + pslfCompletionPercentage + `%;"></span>` -->
		</div>

		<!-- <button onclick="generateSalaryTable()"></button> -->


	</div>

	<!---------- SALARY DATA TABLES ---------->
	<div class="container">

		<div class="marker">
			<h2>Step Pay Plan</h2>
		</div>
		<div>
			<p><span id="fiscal-year"></span></p>
		</div>
		<div id="salary-table-div"></div>
	</div>

	<!---------- RE-EDUCATION INFORMATION ---------->

	<div class="container">

		<div class="marker">
			<h2>RE-EDUCATION INFORMATION</h2>
		</div>

		<span class="marker" id="menulabel">Click for Semester-by-Semester Progress!</span>
		<div class="modal" id="menumodal">

			<div class="menudialog">
				<span class="closemenu">&times;</span>
				<p>I'm doing Accounting now.<br>
					I believe that I will more quickly and easily migrate to a non-custody position
					through this line of work.<br>
					The opportunities are plentiful, even intra-department, and I'm enjoying these studies.<br>
					I expect to be eligible for basic non-custody positions after attaining WTCC's Advanced Accounting Core Cert.<br>
					Around then, I would qualify to study for and then sit for the CPA exam.<br>
					Cpa Requirements: <a href="https://www.thiswaytocpa.com/licensure/state-requirements/NC/">[link]</a>
					I would need to work under a CPA to attain mine, necessitating the migration when eligible.<br> 
					WTCC's Diploma and Associate's are optional for me.<br>
					The Computer Science ship has sailed and the market for that field is absolutely terrible.<br>
					</p>

				<div class="acc-container">
					<ul>
						<li class="acc-core adv-acc-core taking-highlight">ACC 120 - Prin of Financial Accounting</li>
						<li class="acc-core adv-acc-core">ACC 121 - Prin of Managerial Accounting</li>
						<li class="acc-core adv-acc-core">MAT 172 - Precalculus Trigonometry</li>
						<li class="acc-core adv-acc-core">BUS 115 - Business Law I</li>
					</ul>
					<ul>
						<li class="adv-acc-core">ACC 220 - Intermediate Accounting I</li>
						<li class="adv-acc-core">ACC 129 - Individual Income Taxes</li>
						<li class="adv-acc-core">ACC 221 - Intermediate Accounting II</li>
						<li class="adv-acc-core">ACC 269 - Auditing & Assurance Services</li>
					</ul>
					<ul>
						<li class="acc-soft-app">ACC 149 - Intro to ACC Spreadsheets (2)</li>
						<li class="acc-soft-app">ACC 150 - Accounting Software Applications (2)</li>
						<li class="acc-soft-app">ACC 151 - Accounting Spreadsheet Applications (2)</li>
						<li class="acc-soft-app">ACC 152 - Advanced Software Applications (2)</li>
					</ul>
					<ul>
						<li class="acc-dpl">ACC 140 - Payroll Accounting (2)</li>
						<li class="acc-dpl">ACC 130 - Business Income Taxes (3)</li>
						<li class="acc-dpl">ACC 215 - Ethics in Accounting (3)</li>
						<li class="acc-dpl">ECO 151 - Survey of Economics (3)</li>
					</ul>

				</div>

				<ul>Spring 2022 <u>(Begin WakeTech Prerequisites)</u>:
					<li class="taken">MAT 121 - Algebra & Trigonometry I</li>
				</ul>
				<ul> Summer 2022:
					<li class="taken">CTI 110 - Web, Pgm, and DB Fundamentals</li>
				</ul>
				<ul>Fall 2022:
					<li class="taken">MAT 171 - Precalculus Algebra</li>
				</ul>
				<ul>Spring 2023:
					<li class="taken">CSC 151 - JAVA Programming</li>
				</ul>
				<ul>Summer 2023:
					<li class="taken">NONE</li>
				</ul>
				<ul>Fall 2023:
					<li class="taken">NONE</li>
				</ul>
				<ul>Spring 2024:
					<li class="taken">NONE</li>
				</ul>
				<ul>Summer 2024:
					<li class="taking-highlight">ACC 120 - Prin of Financial Accounting</li>
				</ul>
				<ul>Fall 2024:
					<li>ACC 121 - Prin of Managerial Accounting</li>
					<li>BUS 115 - Business Law I</li>
				</ul>
				<ul>Spring 2024:
					<li>TBD</li>
				</ul>
				<ul>Summer 2025:
					<li>BUS 110 - Intro to Business (JAPAN)</li>
				</ul>
				<ul>Fall 2025:
					<li>TBD</li>
				</ul>
				<ul>Spring 2026:
					<li>TBD</li>
				</ul>

			</div>
		</div>
	</div>

	<!---------- PERSONAL DOCUMENTS ---------->

	<div class="container">
		<ul>
			<div class="marker">
				<h2>PERSONAL REFERENCE</h2>
			</div>
			<li>Math 121 Lab<a href="../assets/refdoc-mat121-manual.pdf"> [download]</a></li>
			<li>Math 171 Lab<a href="../assets/refdoc-mat171-manual.pdf"> [download]</a></li>
			<li>Math 171 Transformations Reference<a href="../assets/refdoc-mat171-transformations.pdf"> [download]</a></li>
			<li>CTI 110 Textbook Review Section Key<a href="../assets/CTI-110-Key.pdf"> [download]</a></li>
			<li>CTI 110 myPhpAdmin & mySql Setup<a href="../assets/refdoc-mysql-phpadmin-setup.pdf"> [download]</a></li>
			<li>NC Community College Equivalencies<a href="../assets/refdoc-nc-college-equivalence.pdf"> [download]</a></li>
			<li>Japanese Duolingo Vocabulary<a href="../assets/refdoc-duolingo-japanese-vocab.pdf"> [download]</a></li>
			<li>CHZC Book<a href="../assets/refdoc-chzc-chant2020.pdf"> [download]</a></li>
			<li>Oryoki Book<a href="../assets/refdoc-oryoki-guide.pdf"> [download]</a></li>
		</ul>
		<ul> 
			<div class="marker">
				<h2>Interesting Jobs</h2>
			</div>
			<li>Accounting Technician I<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4541542">[hyperlink]</a></li>
			<li>Application Systems Analyst I<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4549032">[hyperlink]</a></li>
			<li>Accountant I<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4531178">[hyperlink]</a></li>
			<li>Accountant II<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4550173">[hyperlink]</a></li>
			<li>Accountant III<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4258569">[hyperlink]</a></li>
			<li>Accountant IV<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4544214">[hyperlink]</a></li>
			<li>Assistant State Auditor I<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4332067">[hyperlink]</a></li>
			<li>Application Systems Analyst I<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4549032">[hyperlink]</a></li>
			<li>NC Applications Developer<a href="http://agency.governmentjobs.com/northcarolina/job_bulletin.cfm?jobID=2882306&sharedWindow=0">[hyperlink]</a></li>
			<li>NC Java Developer<a href="http://agency.governmentjobs.com/northcarolina/job_bulletin.cfm?jobID=2868649&sharedWindow=0">[hyperlink]</a></li>
			<li>NC Prison User Support Technician<a href="http://agency.governmentjobs.com/northcarolina/job_bulletin.cfm?jobID=2880465&sharedWindow=0">[hyperlink]</a></li>
			<li>NC Prison Data Analyst<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/4002467/data-analyst-wake?keywords=administration&page=13&pagetype=jobOpportunitiesJobs">[hyperlink]</a></li>
			<li>NC Revenue Agent<a href="https://www.governmentjobs.com/careers/northcarolina/jobs/newprint/4486274"></a></li>
		</ul>
	</div>




</body>


function populateBoxes(){
	console.log('Running lifeinweeks.js!');
	console.log(dateplanning);

	const weeks = 52;
	const years = 78;
	const spans = new Array(weeks * years).fill(0).map((_, i) => {
		const span = document.createElement('span');
		span.classList.add('momentbox');
		span.title = i + 1;
		span.id = `box${i}`;
		return span;
	});

	const boxinput = document.getElementById('boxinput');
	spans.forEach(s => boxinput.appendChild(s));

	spans.forEach((span, i) => {
		if (i < weekslived){
			span.classList.add('momentboxfilled');
		}

		// First Year Moment
		if (i === 0){
			span.classList.add('moment', 'firstyear-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('firstyear-moment');
			}, false);
		}
		// High School Moment
		if (i === 715){
			span.classList.add('moment', 'highschool-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('highschool-moment');
			}, false);
		}
		// Undergraduate School Moment
		if (i === 924){
			span.classList.add('moment', 'undergrad-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('undergrad-moment');
			}, false);
		}
		// Graduate School Moment
		if (i === 1132){
			span.classList.add('moment', 'gradschool-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('gradschool-moment');
			}, false);
		}
		// Jail Hired Moment
		if (i === 1239){
			span.classList.add('moment', 'jailhired-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('jailhired-moment');
			}, false);
		}
		// Jail Fired Moment
		if (i === 1252){
			span.classList.add('moment', 'jailfired-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('jailfired-moment');
			}, false);
		}
		// UPS Hired Moment
		if (i === 1254){
			span.classList.add('moment', 'upshired-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('upshired-moment');
			}, false);
		}
		// Security Hired Moment
		if (i === 1261){
			span.classList.add('moment', 'securityhired-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('securityhired-moment');
			}, false);
		}
		// Tech Company WV Moment
		if (i === 1353){
			span.classList.add('moment', 'techwv-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('techwv-moment');
			}, false);
		}
		// Tech Company VA Moment
		if (i === 1366){
			span.classList.add('moment', 'techva-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('techva-moment');
			}, false);
		}
		// Tech Company Furloughed
		if (i === 1384){
			span.classList.add('moment', 'techvafurloughed-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('techvafurloughed-moment');
			}, false);
		}
		// NC Relocation Moment
		if (i === 1395){
			span.classList.add('moment', 'ncrelocation-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('ncrelocation-moment');
			}, false);
		}
		// Covid Moment
		if (i === 1452){
			span.classList.add('moment', 'covid-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('covid-moment');
			}, false);
		}

		// Covid Moment 2
		if (i === 1469){
			span.classList.add('moment', 'covid2-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('covid2-moment');
			}, false);
		}

		// PERT Tryout
		if (i === 1476){
			span.classList.add('moment', 'perttryout-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('perttryout-moment');
			}, false);
		}

		// Joined PERT
		if (i === 1478){
			span.classList.add('moment', 'joinedpert-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('joinedpert-moment');
			}, false);
		}

		// Moved to Asheville
		if (i === 1488){
			span.classList.add('moment', 'asheville-moment');
			span.addEventListener('click', function(){
				displayMomentInfo('asheville-moment');
			}, false);
		}
	});
} // END populateBoxes()

function generateSalaryTable() {
	// Add table headings and CO Grade Column
	const salaryTable = document.createElement("table");
	const salaryTableBody = document.createElement("tbody");

	for (let i = -1; i < salarySchedule.length; i++) {
		const salaryRow = document.createElement("tr");
		salaryTableBody.appendChild(salaryRow);

		if (i === -1) {
			for (let k = -1; k < salarySchedule[0].length; k++) {
				const salaryCellHeader = document.createElement("th");
				const salaryCellHeaderText = document.createTextNode("Step " + (k));
				salaryRow.appendChild(salaryCellHeader);
				if (k < 0) {
					continue;
				}
				salaryCellHeader.appendChild(salaryCellHeaderText);
			}
			continue;
		}


		for (let j = 0; j < salarySchedule[i].length; j++) {
			if (j === 0) {
				const salaryCellGrade = document.createElement("td");
				const salaryCellGradeText = document.createTextNode("CO" + (i + 1));
				salaryCellGrade.appendChild(salaryCellGradeText);
				salaryRow.appendChild(salaryCellGrade);
			}

			const salaryCell = document.createElement("td");
			// if ("$" + salarySchedule[i][j] === document.getElementById("current-salary").value) {
			// 	salaryCell.classList.add("salary-highlight");
			// }
			const salaryCellText = document.createTextNode("$" + salarySchedule[i][j]);
			salaryCell.appendChild(salaryCellText);
			salaryRow.appendChild(salaryCell);
		}
	}
	salaryTable.appendChild(salaryTableBody);
	document.getElementById("salary-table-div").appendChild(salaryTable);
	// document.body.appendChild(salaryTable);
	salaryTable.setAttribute("border", "2");
};
generateSalaryTable();